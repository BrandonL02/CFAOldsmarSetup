import os

import datetime as dt

import calendar

import random

import pandas as pd

import time

from selenium import webdriver

from selenium.webdriver.common.by import By

#Open document for editing
from docx import Document
from docx.shared import Pt 

doc = Document('C:/Users/Brand/Downloads/Front Counter Setup Code.docx')

tables = doc.tables 
#Get date and weekday within python
date = dt.date.today()

print_date = (calendar.day_name[date.weekday()] + ', ' + date.strftime("%B %d"))

Workers = []
Begin = []
End = []
Duration = []


def minute_offset(user_var):
    if user_var >= 30:
        user_var = 1
    else:
        user_var = 0    
    return int(user_var)    

def time_to_list(Enter):
    Hours_int = []
    for e in Enter:
        e = time.strptime(e,'%H:%M%p')
        if 0 in e[:5]:
            e = e[3]
        else:
           estimate = minute_offset(e[4])
           e = e[3] + estimate
           if e > 12:
               e = e - 12
        Hours_int.append(e)
    return Hours_int
    
    

def Separate(info):
    for key, value in dict(info).items():
        Workers.append(key)
        Duration.append(value)
    for x in Duration:
        on, off = x.split(' - ', 2)
        Begin.append(on)
        End.append(off)
    x = time_to_list(Begin)
    y = time_to_list(End)
    z = Workers
    return x,y,z
    
def remove_unscheduled(Day):
    for key, value in dict(Day).items():
        if value == '':
            del Day[key] 
            
def DaySort(Weekday):
    for h in Weekday:
        Working = (Weekday[h])
        remove_unscheduled(Working)
        x,y,z = Separate(Working)
    return x,y,z
     

#Access Hotschedules with credentials and navigate pages

username = '2445922'

password = 'Monkey2002'

url = "https://www.hotschedules.com/hs/login.jsp"

driver = webdriver.Chrome(executable_path=r'C:/Users/Brand\Desktop/chromedriver.exe')

driver.get(url)

driver.find_element(By.NAME,'username').send_keys(username)

driver.find_element(By.NAME,'password').send_keys(password)

driver.find_elements(By.ID,"loginBtn")[0].click()

time.sleep(8) #Wait for login

driver.find_element(By.CLASS_NAME,"go-to-other-pages-buttons").click()

driver.find_element(By.XPATH, "/html[@class='hs-echo-ui clarifi-lobal-nav']/body[@class='screen-employeeHome employee-home-page']/div[@id='entire-taskarea-wrapper']/div[@id='root']/div[@class='employee-home']/div/div[@class='employee-home-inner-page']/div[@class='page-content']/div[@class='emp-home-widgets-dashboard']/div[@class='inner-content widgets-count-3']/div[@class='emp-home-base-widget is-expanded']/div[@class='inner different-layout']/div[@class='expanded-view all-schedules']/div[@class='children-container']/div[@class='emp-home-all-schedules-widget']/div[@class='all-schedules-container']/div[@class='all-schedules-details']/div[@class='my-schedules-items']/div[2]/div[@class='schedule-item-container']/div[@class='schedule-item']").click()

Info = driver.find_element(By.CLASS_NAME, "schedule-table")

Data = Info.get_attribute('innerHTML')


All_shifts = []



time.sleep(3) #Let page load

emp = driver.find_element(By.XPATH, "/html[@class='hs-echo-ui clarifi-lobal-nav']/body[@class='screen-employeeHome employee-home-page']/div[@id='entire-taskarea-wrapper']/div[@id='root']/div[@class='employee-home']/div/div[@class='employee-home-inner-page']/div[@class='page-content']/div[@class='emp-home-widgets-dashboard']/div[@class='inner-content widgets-count-3']/div[@class='emp-home-base-widget is-expanded']/div[@class='inner different-layout']/div[@class='expanded-view all-schedules']/div[@class='children-container']/div[@class='emp-home-all-schedules-widget']/div[@class='all-schedules-container']/div[@class='all-schedules-details']/div[@class='my-schedules-items']/div[2]/div[@class='full-schedule']/div[@class='schedule-table']/div[@class='schedule-table-row'][1]")

#Get employee hours from HS table & Save to All_shifts list

R1_Columns = 1

while R1_Columns != 54:
   for A in range (2,8):
        if (R1_Columns == 1):
            Row_data = driver.find_element(By.XPATH, "/html[@class='hs-echo-ui clarifi-lobal-nav']/body[@class='screen-employeeHome employee-home-page']/div[@id='entire-taskarea-wrapper']/div[@id='root']/div[@class='employee-home']/div/div[@class='employee-home-inner-page']/div[@class='page-content']/div[@class='emp-home-widgets-dashboard']/div[@class='inner-content widgets-count-3']/div[@class='emp-home-base-widget is-expanded']/div[@class='inner different-layout']/div[@class='expanded-view all-schedules']/div[@class='children-container']/div[@class='emp-home-all-schedules-widget']/div[@class='all-schedules-container']/div[@class='all-schedules-details']/div[@class='my-schedules-items']/div[2]/div[@class='full-schedule']/div[@class='schedule-table']/div[@class='schedule-table-row'][" + str (R1_Columns) + "]/div[@class='days-row grayed border-top']/div[@class='schedule-table-cell scheduled-shift']["  + str (A) + "]")
        elif (R1_Columns % 2 == 0):
            Row_data = driver.find_element(By.XPATH, "/html[@class='hs-echo-ui clarifi-lobal-nav']/body[@class='screen-employeeHome employee-home-page']/div[@id='entire-taskarea-wrapper']/div[@id='root']/div[@class='employee-home']/div/div[@class='employee-home-inner-page']/div[@class='page-content']/div[@class='emp-home-widgets-dashboard']/div[@class='inner-content widgets-count-3']/div[@class='emp-home-base-widget is-expanded']/div[@class='inner different-layout']/div[@class='expanded-view all-schedules']/div[@class='children-container']/div[@class='emp-home-all-schedules-widget']/div[@class='all-schedules-container']/div[@class='all-schedules-details']/div[@class='my-schedules-items']/div[2]/div[@class='full-schedule']/div[@class='schedule-table']/div[@class='schedule-table-row'][" + str (R1_Columns) + "]/div[@class='days-row']/div[@class='schedule-table-cell scheduled-shift']["  + str (A) + "]")
        elif (R1_Columns != 53):
            Row_data = driver.find_element(By.XPATH, "/html[@class='hs-echo-ui clarifi-lobal-nav']/body[@class='screen-employeeHome employee-home-page']/div[@id='entire-taskarea-wrapper']/div[@id='root']/div[@class='employee-home']/div/div[@class='employee-home-inner-page']/div[@class='page-content']/div[@class='emp-home-widgets-dashboard']/div[@class='inner-content widgets-count-3']/div[@class='emp-home-base-widget is-expanded']/div[@class='inner different-layout']/div[@class='expanded-view all-schedules']/div[@class='children-container']/div[@class='emp-home-all-schedules-widget']/div[@class='all-schedules-container']/div[@class='all-schedules-details']/div[@class='my-schedules-items']/div[2]/div[@class='full-schedule']/div[@class='schedule-table']/div[@class='schedule-table-row'][" + str (R1_Columns) + "]/div[@class='days-row grayed']/div[@class='schedule-table-cell scheduled-shift']["  + str (A) + "]")                                 
        else:
            Row_data = driver.find_element(By.XPATH, "/html[@class='hs-echo-ui clarifi-lobal-nav']/body[@class='screen-employeeHome employee-home-page']/div[@id='entire-taskarea-wrapper']/div[@id='root']/div[@class='employee-home']/div/div[@class='employee-home-inner-page']/div[@class='page-content']/div[@class='emp-home-widgets-dashboard']/div[@class='inner-content widgets-count-3']/div[@class='emp-home-base-widget is-expanded']/div[@class='inner different-layout']/div[@class='expanded-view all-schedules']/div[@class='children-container']/div[@class='emp-home-all-schedules-widget']/div[@class='all-schedules-container']/div[@class='all-schedules-details']/div[@class='my-schedules-items']/div[2]/div[@class='full-schedule']/div[@class='schedule-table']/div[@class='schedule-table-row'][" + str (R1_Columns) + "]/div[@class='days-row grayed border-bottom']/div[@class='schedule-table-cell scheduled-shift']["  + str (A) + "]")
        R1_shifts = (Row_data.text)
        R1_shifts = R1_shifts.replace("FOH General\n", "")
        All_shifts.append(R1_shifts)
   R1_Columns += 1


full_schedule = {}


days = dict({'Monday' : 'x', 'Tuesday' : 'x' , 'Wednesday' : 'x' , 'Thursday' : 'x' , 'Friday' : 'x' , 'Saturday' : 'x'})

#Get employee names from HS

for x in range (1,54):
   x = str (x)
   emp = driver.find_element(By.XPATH, "/html[@class='hs-echo-ui clarifi-lobal-nav']/body[@class='screen-employeeHome employee-home-page']/div[@id='entire-taskarea-wrapper']/div[@id='root']/div[@class='employee-home']/div/div[@class='employee-home-inner-page']/div[@class='page-content']/div[@class='emp-home-widgets-dashboard']/div[@class='inner-content widgets-count-3']/div[@class='emp-home-base-widget is-expanded']/div[@class='inner different-layout']/div[@class='expanded-view all-schedules']/div[@class='children-container']/div[@class='emp-home-all-schedules-widget']/div[@class='all-schedules-container']/div[@class='all-schedules-details']/div[@class='my-schedules-items']/div[2]/div[@class='full-schedule']/div[@class='schedule-table']/div[@class='schedule-table-row'][" + x + "]/div[@class='schedule-table-cell employee']/div[@class='employee-name']")
   employee_id = emp.text
   full_schedule.update({employee_id : days})

#Create dataframe to display employee names and hours

df = pd.DataFrame(full_schedule).T 


#Replace letter x in dataframe with all the scheduled shifts

A = 0
B = 1
staff = 0

for p in range (0,53):
    nav = 0
    y = 1 
    for t in df.iloc[A:B]:
        df.iloc[A:B, nav:y] = All_shifts[staff]
        if nav == 6:
            nav == 0
            y == 1
            staff += 1
        else:
            nav += 1
            y += 1
            staff +=1
    A += 1
    B += 1

Today = ''
if 'Monday' in (calendar.day_name[date.weekday()]):
    Today = df.iloc[0:53,0:1].to_dict()
elif 'Tuesday' in (calendar.day_name[date.weekday()]):
    Today = df.iloc[0:53,1:2].to_dict() 
elif 'Wednesday' in (calendar.day_name[date.weekday()]):
    Today = df.iloc[0:53,2:3].to_dict()
elif 'Thursday' in (calendar.day_name[date.weekday()]):
    Today = df.iloc[0:53,3:4].to_dict()
elif 'Friday' in (calendar.day_name[date.weekday()]):
    Today = df.iloc[0:53,4:5].to_dict()
elif 'Saturday' in (calendar.day_name[date.weekday()]):
    Today = df.iloc[0:53,5:6].to_dict()



x,y,z = (DaySort(Today)) 
    
driver.close()





#Define Lists
employee_and_shift = []
employee_list = []
start_shift_list = []
end_shift_list = []
shift_length = []
time_2to3 = []
time_3to4 = []
time_4to5 = []
time_5to6 = []
time_6to7 = []
time_7to8 = []
time_8to9 = []
time_9to10 = []
FOHCrew = []

#Define positions as variables
#2-3
window2to3 = ()
DTbag2to3 = ()
Drinks2to3 = ()
Desserts2to3 = ()
Sauce2to3 = ()
FCbag2to3 = ()
Register1_2to3 = ()
Register2_2to3 = ()
Dining2to3 = ()
Cash2to3 = ()
Ipad1_2to3 = ()
Ipad2_2to3 = ()
Ipad3_2to3 = ()

#3-4
window3to4 = ()
DTbag3to4 = ()
Drinks3to4 = ()
Desserts3to4 = ()
Sauce3to4 = ()
FCbag3to4 = ()
Register1_3to4 = ()
Register2_3to4 = ()
Dining3to4 = ()
Cash3to4 = ()
Ipad1_3to4 = ()
Ipad2_3to4 = ()
Ipad3_3to4 = ()

#4-5
window4to5 = ()
DTbag4to5 = ()
Drinks4to5 = ()
Desserts4to5 = ()
Sauce4to5 = ()
FCbag4to5 = ()
Register1_4to5 = ()
Register2_4to5 = ()
Dining4to5 = ()
Cash4to5 = ()
Ipad1_4to5 = ()
Ipad2_4to5 = ()
Ipad3_4to5 = ()

#5-6
window5to6 = ()
DTbag5to6 = ()
Drinks5to6 = ()
Desserts5to6 = ()
Sauce5to6 = ()
FCbag5to6 = ()
Register1_5to6 = ()
Register2_5to6 = ()
Dining5to6 = ()
Cash5to6 = ()
Ipad1_5to6 = ()
Ipad2_5to6 = ()
Ipad3_5to6 = ()

#6-7
window6to7 = ()
DTbag6to7 = ()
Drinks6to7 = ()
Desserts6to7 = ()
Sauce6to7 = ()
FCbag6to7 = ()
Register1_6to7 = ()
Register2_6to7 = ()
Dining6to7 = ()
Cash6to7 = ()
Ipad1_6to7 = ()
Ipad2_6to7 = ()
Ipad3_6to7 = ()

#7-8
window7to8 = ()
DTbag7to8 = ()
Drinks7to8 = ()
Desserts7to8 = ()
Sauce7to8 = ()
FCbag7to8 = ()
Register1_7to8 = ()
Register2_7to8 = ()
Dining7to8 = ()
Cash7to8 = ()
Ipad1_7to8 = ()
Ipad2_7to8 = ()
Ipad3_7to8 = ()

#8-9
window8to9 = ()
DTbag8to9 = ()
Drinks8to9 = ()
Desserts8to9 = ()
Sauce8to9 = ()
FCbag8to9 = ()
Register1_8to9 = ()
Register2_8to9 = ()
Dining8to9 = ()
Cash8to9 = ()
Ipad1_8to9 = ()
Ipad2_8to9 = ()
Ipad3_8to9 = ()

#9-10
window9to10 = ()
DTbag9to10 = ()
Drinks9to10 = ()
Desserts9to10 = ()
Sauce9to10 = ()
FCbag9to10 = ()
Register1_9to10 = ()
Register2_9to10 = ()
Dining9to10 = ()

pos_Ipad1_4to5 = ()
pos_Ipad2_4to5 = ()
pos_Ipad3_4to5 = ()

employee_list = list(z)
start_shift = list(x)
end_shift = list(y) 

add = 0
print((employee_list[add]))
for x in range(0,(len(employee_list))):
    if (end_shift[add] > 14 and start_shift[add] <= 14):  
       time_2to3.append(employee_list[add])
       print(add)
    add += 1
    
print(time_2to3)    
